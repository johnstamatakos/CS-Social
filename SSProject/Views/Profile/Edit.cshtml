@model SSProject.Models.AspNetUser

@{
    ViewBag.Title = "Edit Profile Information for: " + Model.UserName;
}

<h2>Edit Information for: @Html.DisplayFor(model => model.UserName)</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <!--Contains all of the divs and html labels for to populate the edit page-->
        
        <div class="form-group">

            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <span class="glyphicon glyphicon-user"></span>
            <div class="col-md-10">

                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <span class="glyphicon glyphicon-envelope"></span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Computer, "Computer Model", htmlAttributes: new { @class = "control-label col-md-2" })
            <span class="glyphicon glyphicon-hdd"></span>
            <div class="col-md-10">
               
                @Html.EditorFor(model => model.Computer, new { htmlAttributes = new { @class = "form-control" } })
                
                @Html.ValidationMessageFor(model => model.Computer, "", new { @class = "text-danger" })
            </div>
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComputerOS, "Computer's Operating System", htmlAttributes: new { @class = "control-label col-md-2" })
            <span class="glyphicon glyphicon-th-large"></span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ComputerOS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ComputerOS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProgrammingL,"Programming Languages", htmlAttributes: new { @class = "control-label col-md-2" })
            <span class="glyphicon glyphicon-user"></span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProgrammingL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProgrammingL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneM, "Phone Model", htmlAttributes: new { @class = "control-label col-md-2" })
            <span class="glyphicon glyphicon-phone"></span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneOS, "Phone's Operating System", htmlAttributes: new { @class = "control-label col-md-2" })
            <span class="glyphicon glyphicon-th-large"></span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneOS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneOS, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobTitle, "Job Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <span class="glyphicon glyphicon-briefcase"></span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, "Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <span class="glyphicon glyphicon-earphone"></span>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>    

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>

    <span class="glyphicon glyphicon-list"></span>
    @Html.ActionLink("Details", "Details", new { id = Model.Id }, new { @class = "btn btn-primary" })
    <!-- @Html.ActionLink("Back to List", "Index") -->
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
